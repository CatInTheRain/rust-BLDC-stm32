[package]
authors = ["Massimo Teppati LosÃ¨ <massimo.teppatilose@santannapisa.it>"]
edition = "2018"
readme = "README.md"
name = "rust_bldc_stm32"
version = "0.1.0"

[dependencies]
# cortex-m = "0.6.0"
# cortex-m-rt = "0.6.10"
cortex-m-semihosting = "0.3.3"
# panic-halt = "0.2.0"

# Uncomment for the panic example.
# panic-itm = "0.4.1"

# Uncomment for the allocator example.
# alloc-cortex-m = "0.4.0"

# Uncomment for the device example.
# Update `memory.x`, set target to `thumbv7em-none-eabihf` in `.cargo/config`,
# and then use `cargo build --examples device` to build it.
# [dependencies.stm32f3]
# features = ["stm32f303", "rt"]
# version = "0.7.1"


# Only set the critical section feature, if you are using a bare-metal platform
# without any RTOS
# See https://github.com/rust-embedded/critical-section for further details.
cortex-m = { version = "0.7.4", features = ["critical-section-single-core"]}
cortex-m-rt = { version = ">=0.6.15,<0.8", features = ["device"] }
# cortex-m-rtic = "1.0.0"
rtic = {version = "2.0.1", features=["thumbv7-backend", "rtic-monotonics"]}
# Panic behavior, see https://crates.io/keywords/panic-impl for alternatives
panic-halt = "0.2.0"
# [target.'cfg(debug_assertions)'.dependencies] I don't know if this works!
panic-semihosting = { version = "0.6.0", features = ["exit"] }
# Replace stm32f303xc with your target chip, see next section for more info
stm32f7xx-hal = { version = "0.7.0", features = ["rt", "stm32f767"] }
nb = "1"
# rtt-target = {version="0.3.1",  features = ["cortex-m"]}

# this lets you use `cargo fix`!
[[bin]]
name = "rust_bldc_stm32"
test = false
bench = false

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
lto = true # better optimizations
